SET SERVEROUTPUT ON;

/* -------------------------------------*/


/*FONCTION qui retourne l'argent qu'à dépensé un client dans l'achat de marchandises*/

CREATE or REPLACE FUNCTION argentByClient( v_ID_CLIENT IN CLIENT.ID_CLIENT%TYPE)
RETURN NUMBER is

v_sum NUMBER;

BEGIN

SELECT SUM(PRIX) INTO v_sum
FROM VENTE JOIN CLIENT ON VENTE.ID_CLIENT=CLIENT.ID_CLIENT
JOIN MARCHANDISE ON VENTE.ID_MARCH=MARCHANDISE.ID_MARCH
JOIN PRODUIT ON PRODUIT.ID_PRODUIT=MARCHANDISE.ID_PRODUIT
WHERE CLIENT.ID_CLIENT IN (
	SELECT VENTE.ID_CLIENT
	FROM VENTE JOIN CLIENT ON VENTE.ID_CLIENT=CLIENT.ID_CLIENT
	JOIN MARCHANDISE ON VENTE.ID_MARCH=MARCHANDISE.ID_MARCH
	JOIN PRODUIT ON PRODUIT.ID_PRODUIT=MARCHANDISE.ID_PRODUIT
	WHERE VENTE.ID_CLIENT = v_ID_CLIENT
	GROUP BY VENTE.ID_CLIENT);

RETURN v_sum;

END;

/
SHOW ERRORS
DECLARE

BEGIN
dbms_output.put_line(argentByClient(2001)) ; -- affichage
END;
/


/* -------------------------------------*/


/*La procédure j'y reflechie*/

/* AJOUTE LA QUATITE DE LA COMMANDE DANS LE STOCK DE PRODUIT EN QUESTION*/
CREATE OR REPLACE PROCEDURE majAddQuantite(v_ID_PRODUIT IN PRODUIT.ID_PRODUIT, v_QUANTITE_COMMANDE IN EST_COMMANDE.QUANTITE)
IS
BEGIN

UPDATE PRODUIT
SET QUANTITE=QUANTITE+v_QUANTITE_COMMANDE
WHERE ID_PRODUIT=v_ID_PRODUIT;
END;
/
Show errors;

/* REDUIT  LA QUATITE DE LA COMMANDE DANS LE STOCK DE PRODUIT EN QUESTION */
CREATE OR REPLACE PROCEDURE majSellQuantite(v_ID_PRODUIT IN PRODUIT.ID_PRODUIT)
IS
BEGIN

UPDATE PRODUIT
SET QUANTITE=QUANTITE-1
WHERE ID_PRODUIT=v_ID_PRODUIT;
END;
/
Show errors;



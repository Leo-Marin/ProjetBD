BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE EMPLOYE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP CONGE
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE CONGE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP CLIENT
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE CLIENT';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP MARCHANDISE
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE MARCHANDISE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP COMMANDE
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE COMMANDE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP PRODUIT
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PRODUIT';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP TRAVAILLE
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TRAVAILLE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP EST_COMMANDE
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE EST_COMMANDE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP HORAIRE
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE HORAIRE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- DROP VENTE
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE VENTE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/


---------------------
CREATE TABLE EMPLOYE(
                        ID_EMPLOYE NUMBER(4,0) /*GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1)*/,
                        NOM VARCHAR(25) NOT NULL,
                        PRENOM VARCHAR(25) NOT NULL,
                        SALAIRE DECIMAL(10) NOT NULL,
                        AGE NUMBER CHECK (AGE>=18),
                        DIPLOME VARCHAR(25),
                        CONSTRAINT PK_EMPLOYE PRIMARY KEY (ID_EMPLOYE)
);


CREATE TABLE CONGE(
                      JOUR VARCHAR(10) CHECK (JOUR IN ('LUNDI','MARDI','MERCREDI','JEUDI','VENDREDI','SAMEDI')),
                      NUMERO_SEMAINE NUMERIC(2,0),
                      ID_EMPLOYE NUMBER,
                      CONSTRAINT PK_CONGE PRIMARY KEY (JOUR,NUMERO_SEMAINE,ID_EMPLOYE),
                      CONSTRAINT FK_EMPLOYE_CONGE FOREIGN KEY (ID_EMPLOYE) REFERENCES EMPLOYE(ID_EMPLOYE)
);

CREATE TABLE CLIENT(
                       ID_CLIENT NUMBER /*GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1)*/,
                       NOM VARCHAR(25) NOT NULL,
                       PRENOM VARCHAR(25) NOT NULL,
                       AGE NUMERIC(3,0) CHECK (AGE BETWEEN 0 AND 120),
                       CONSTRAINT PK_CLIENT PRIMARY KEY (ID_CLIENT)
);


CREATE TABLE COMMANDE(
                         ID_COMMANDE NUMBER /*GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1)*/,
                         NOM_FOURNISSEUR VARCHAR(25),
                         PRIX DECIMAL(6),
                         CONSTRAINT PK_COMMANDE PRIMARY KEY (ID_COMMANDE)
);


CREATE TABLE PRODUIT(
                        ID_PRODUIT NUMBER /*GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1)*/,
                        NOM_MARCH VARCHAR(25) NOT NULL,
                        PRIX DECIMAL(5),
                        PRESCRIPTION CHAR(1) CHECK (PRESCRIPTION IN ('1','0')),
                        TAUX_REMBOURSEMENT DECIMAL(3),
                        DESCRIPTION VARCHAR(25),
                        QUANTITE NUMERIC(4,0),
                        CONSTRAINT PK_PRODUIT PRIMARY KEY (ID_PRODUIT)
);

CREATE TABLE MARCHANDISE(
                            ID_MARCH NUMBER /*GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1)*/,
                            ID_PRODUIT NUMBER,
                            ID_COMMANDE NUMBER,
                            CONSTRAINT PK_MARCH PRIMARY KEY (ID_MARCH),
                            CONSTRAINT FK_PRODUIT_MARCH FOREIGN KEY (ID_PRODUIT) REFERENCES PRODUIT(ID_PRODUIT),
                            CONSTRAINT FK_COMMANDE_MARCH FOREIGN KEY (ID_COMMANDE) REFERENCES  COMMANDE(ID_COMMANDE)
);



CREATE TABLE HORAIRE(
                        ID_HORAIRE NUMBER /*GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1)*/,
                        JOUR_SEMAINE VARCHAR(25) CHECK (JOUR_SEMAINE IN ('LUNDI','MARDI','MERCREDI','JEUDI','VENDREDI','SAMEDI')),
                        NUMERO_SEMAINE NUMERIC(2,0) CHECK (NUMERO_SEMAINE BETWEEN 1 AND 53),
                        CONSTRAINT PK_HORAIRE PRIMARY KEY (ID_HORAIRE)
);

CREATE TABLE TRAVAILLE(
                          ID_EMPLOYE NUMBER,
                          ID_HORAIRE NUMBER,
                          CONSTRAINT PK_TRAVAILLE PRIMARY KEY (ID_EMPLOYE,ID_HORAIRE),
                          CONSTRAINT FK_EMPLOYE_TRV FOREIGN KEY (ID_EMPLOYE) REFERENCES EMPLOYE(ID_EMPLOYE),
                          CONSTRAINT FK_HORAIRE_TRV FOREIGN KEY (ID_HORAIRE) REFERENCES HORAIRE(ID_HORAIRE)
);


CREATE TABLE VENTE(
                      ID_EMPLOYE NUMBER,
                      ID_MARCH NUMBER,
                      ID_CLIENT NUMBER,
                      PRESCRIPTION CHAR(1) CHECK (PRESCRIPTION IN ('1','0')),
                      DATE_VENTE DATE,
                      CONSTRAINT PK_VENTE PRIMARY KEY (ID_EMPLOYE,ID_MARCH,ID_CLIENT),
                      CONSTRAINT FK_EMPLOYE_VEN FOREIGN KEY (ID_EMPLOYE) REFERENCES EMPLOYE(ID_EMPLOYE),
                      CONSTRAINT FK_MARCH_VEN FOREIGN KEY (ID_MARCH) REFERENCES MARCHANDISE(ID_MARCH),
                      CONSTRAINT FK_CLIENT_VEN FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT(ID_CLIENT)
);


CREATE TABLE EST_COMMANDE(
                             ID_PRODUIT NUMBER,
                             ID_COMMANDE NUMBER,
                             QUANTITE NUMERIC(4,0),
                             CONSTRAINT PK_ESTCOMMANDE PRIMARY KEY (ID_PRODUIT,ID_COMMANDE),
                             CONSTRAINT FK_PRODUIT_COMM FOREIGN KEY (ID_PRODUIT) REFERENCES PRODUIT(ID_PRODUIT),
                             CONSTRAINT FK_COMMANDE_COMM FOREIGN KEY (ID_COMMANDE) REFERENCES COMMANDE(ID_COMMANDE)
);

/*
SELECT *
FROM EMPLOYE;
*/
